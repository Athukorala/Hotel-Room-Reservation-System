/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mangroven.hotel.view.jpanel;

import com.mangroven.hotel.view.jpanel.ModifyPayment;
import com.jidesoft.swing.AutoCompletion;
import com.mangroven.hotel.controller.ControllerFactory;
import com.mangroven.hotel.controller.custom.GuestController;
import com.mangroven.hotel.controller.custom.PaymentController;
import com.mangroven.hotel.controller.custom.QueryController;
import com.mangroven.hotel.controller.custom.ReservationController;
import com.mangroven.hotel.controller.custom.RoomController;
import com.mangroven.hotel.dto.GuestDTO;
import com.mangroven.hotel.dto.PaymentDTO;
import com.mangroven.hotel.dto.ReservationDTO;
import com.mangroven.hotel.dto.RoomDTO;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tharindu
 */
public class modifyRoomReservePanel extends javax.swing.JPanel {

    private ReservationController resvCntrl;
    private RoomController roomCntrl;
    private QueryController queryCntrl;
    private PaymentController payCntrl;
    private GuestController guestCntrl;
    String oldRid;
    long x;

    /**
     * Creates new form modifyRoomReservePanel
     */
    public modifyRoomReservePanel() throws Exception {
        initComponents();
        guestCntrl = (GuestController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.GUEST);
        payCntrl = (PaymentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.PAYMENT);
        queryCntrl = (QueryController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.QUERY);
        resvCntrl = (ReservationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.RESERVATION);
        roomCntrl = (RoomController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ROOM);
        AutoCompletion ac1 = new AutoCompletion(comboRsid);
        AutoCompletion ac2 = new AutoCompletion(comboGuest);
        AutoCompletion ac3 = new AutoCompletion(comboPerson);
        rsidLoard();
        gidLoard();
        edit();
        dateCountReserve();
        searchPrice();
        icon();
        
         Calendar cal=Calendar.getInstance();
        cal.add(Calendar.DATE,0);
        datePickerIn.getMonthView().setLowerBound(cal.getTime());
        
         Calendar cal2=Calendar.getInstance();
        cal2.add(Calendar.DATE,0);
        datePickerIn1.getMonthView().setLowerBound(cal2.getTime());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        txtIN = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        datePickerIn = new org.jdesktop.swingx.JXDatePicker();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        comboGuest = new javax.swing.JComboBox();
        jPanel11 = new javax.swing.JPanel();
        txtRoom = new javax.swing.JTextField();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        comboPerson = new javax.swing.JComboBox();
        comboRsid = new javax.swing.JComboBox<String>();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        txtOUT = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        datePickerIn1 = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        lblDelete = new javax.swing.JLabel();
        btnEdit1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        txtOldPrice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        txtNewPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtDay = new javax.swing.JTextField();
        txtRoomPrice = new javax.swing.JTextField();
        lblRoomIcon = new javax.swing.JLabel();
        lblGuestName = new javax.swing.JLabel();
        lblDelete1 = new javax.swing.JLabel();
        txtDesription = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(254, 254, 254));

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setLayout(new java.awt.CardLayout());

        jPanel5.setBackground(new java.awt.Color(243, 243, 243));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(55, 14, 169));
        jLabel3.setText("Guest ID   ");

        jLabel4.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(55, 14, 169));
        jLabel4.setText("Check In Date   ");

        jLabel6.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(55, 14, 169));
        jLabel6.setText("Check Out Date   ");

        jPanel9.setBackground(new java.awt.Color(236, 236, 236));
        jPanel9.setOpaque(false);

        txtIN.setBackground(new java.awt.Color(236, 236, 236));
        txtIN.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtIN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtIN.setEnabled(false);
        txtIN.setOpaque(false);
        txtIN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtINMouseClicked(evt);
            }
        });
        txtIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtINActionPerformed(evt);
            }
        });

        datePickerIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator6)
                    .addComponent(txtIN, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(datePickerIn, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(datePickerIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(txtIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );

        jLabel7.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(55, 14, 169));
        jLabel7.setText("Room ID   ");

        jLabel2.setBackground(new java.awt.Color(55, 14, 169));
        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(55, 14, 169));
        jLabel2.setText("Reservation ID   ");

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(152, 5, 5));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/image1.gif"))); // NOI18N
        jLabel1.setText("    Modify Room Reservation");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel10.setBackground(new java.awt.Color(236, 236, 236));
        jPanel10.setOpaque(false);

        comboGuest.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        comboGuest.setOpaque(false);
        comboGuest.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboGuestItemStateChanged(evt);
            }
        });
        comboGuest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboGuestMouseClicked(evt);
            }
        });
        comboGuest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGuestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboGuest, 0, 124, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(comboGuest, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(236, 236, 236));
        jPanel11.setOpaque(false);

        txtRoom.setBackground(new java.awt.Color(236, 236, 236));
        txtRoom.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtRoom.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtRoom.setDisabledTextColor(new java.awt.Color(128, 128, 128));
        txtRoom.setOpaque(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator8)
                    .addComponent(txtRoom, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jLabel8.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(55, 14, 169));
        jLabel8.setText("Persons");

        jPanel12.setBackground(new java.awt.Color(236, 236, 236));
        jPanel12.setOpaque(false);

        comboPerson.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 12)); // NOI18N
        comboPerson.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        comboPerson.setOpaque(false);
        comboPerson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboPersonMouseClicked(evt);
            }
        });
        comboPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(comboPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(comboPerson, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        comboRsid.setFont(new java.awt.Font("Yu Gothic UI Semilight", 1, 14)); // NOI18N
        comboRsid.setBorder(null);
        comboRsid.setOpaque(false);
        comboRsid.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboRsidItemStateChanged(evt);
            }
        });
        comboRsid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboRsidMouseClicked(evt);
            }
        });
        comboRsid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRsidActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setOpaque(false);

        txtOUT.setBackground(new java.awt.Color(236, 236, 236));
        txtOUT.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtOUT.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtOUT.setEnabled(false);
        txtOUT.setOpaque(false);
        txtOUT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtOUTMouseClicked(evt);
            }
        });
        txtOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOUTActionPerformed(evt);
            }
        });

        datePickerIn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerIn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator5)
                    .addComponent(txtOUT, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(datePickerIn1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datePickerIn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Room ID", " Room_Name", " Room_Description", " Room_Price"
            }
        ));
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel5.setBackground(new java.awt.Color(0, 197, 255));
        jLabel5.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(254, 254, 254));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Search");
        jLabel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel5.setOpaque(true);
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
        });

        lblDelete.setBackground(new java.awt.Color(255, 0, 12));
        lblDelete.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        lblDelete.setForeground(new java.awt.Color(255, 255, 255));
        lblDelete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDelete.setText("Delete");
        lblDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDelete.setOpaque(true);
        lblDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDeleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblDeleteMouseExited(evt);
            }
        });

        btnEdit1.setBackground(new java.awt.Color(205, 149, 1));
        btnEdit1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        btnEdit1.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEdit1.setText("Edit");
        btnEdit1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit1.setOpaque(true);
        btnEdit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEdit1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEdit1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEdit1MouseExited(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(55, 14, 169));
        jLabel10.setText("New Price");

        jPanel13.setBackground(new java.awt.Color(236, 236, 236));
        jPanel13.setOpaque(false);

        txtOldPrice.setBackground(new java.awt.Color(236, 236, 236));
        txtOldPrice.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        txtOldPrice.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtOldPrice.setDisabledTextColor(new java.awt.Color(128, 128, 128));
        txtOldPrice.setOpaque(false);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtOldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(txtOldPrice)
                .addContainerGap())
        );

        jLabel11.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(55, 14, 169));
        jLabel11.setText("Old Price");

        jPanel14.setBackground(new java.awt.Color(236, 236, 236));
        jPanel14.setOpaque(false);

        txtNewPrice.setBackground(new java.awt.Color(236, 236, 236));
        txtNewPrice.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        txtNewPrice.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNewPrice.setDisabledTextColor(new java.awt.Color(128, 128, 128));
        txtNewPrice.setOpaque(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNewPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addComponent(txtNewPrice)
                .addContainerGap())
        );

        jLabel9.setForeground(new java.awt.Color(140, 140, 140));
        jLabel9.setText("Room Price");

        jLabel12.setForeground(new java.awt.Color(140, 140, 140));
        jLabel12.setText("Selected Days");

        txtDay.setBorder(null);
        txtDay.setDisabledTextColor(new java.awt.Color(103, 103, 103));
        txtDay.setEnabled(false);
        txtDay.setOpaque(false);
        txtDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDayActionPerformed(evt);
            }
        });

        txtRoomPrice.setBorder(null);
        txtRoomPrice.setDisabledTextColor(new java.awt.Color(103, 103, 103));
        txtRoomPrice.setEnabled(false);
        txtRoomPrice.setOpaque(false);
        txtRoomPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoomPriceActionPerformed(evt);
            }
        });

        lblRoomIcon.setBackground(new java.awt.Color(236, 236, 236));
        lblRoomIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRoomIcon.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblRoomIcon.setOpaque(true);

        lblGuestName.setForeground(new java.awt.Color(140, 140, 140));
        lblGuestName.setText("Room Price");

        lblDelete1.setBackground(new java.awt.Color(212, 191, 29));
        lblDelete1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        lblDelete1.setForeground(new java.awt.Color(255, 255, 255));
        lblDelete1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDelete1.setText("Clear");
        lblDelete1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblDelete1.setOpaque(true);
        lblDelete1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDelete1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDelete1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblDelete1MouseExited(evt);
            }
        });

        txtDesription.setText("jLabel13");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1044, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGuestName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(834, 834, 834)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRoomPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(44, 44, 44))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(comboRsid, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                        .addGap(75, 75, 75)
                                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23)
                                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(88, 88, 88)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(95, 95, 95)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(62, 62, 62)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblRoomIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(198, 198, 198)
                                        .addComponent(txtDesription, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(150, 150, 150)))
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(253, 253, 253)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboRsid, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDesription)
                                .addGap(31, 31, 31))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lblGuestName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRoomPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(lblRoomIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(41, 41, 41)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 188, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtINActionPerformed
        String txt = txtIN.getText();
        boolean isTel = false;

        if (txt.matches("\\d{4}-\\d{2}-\\d{2}")) {
            isTel = true;
        }

        if (isTel) {
            txtOUT.requestFocus();
        } else {

            JOptionPane.showMessageDialog(null, "invalid Date");
            txtIN.requestFocus();
        }

        //txtOUT.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_txtINActionPerformed

    private void datePickerInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerInActionPerformed
        Date d = datePickerIn.getDate();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String formatDate = df.format(d);
        txtIN.setText(formatDate);
        // TODO add your handling code here:
    }//GEN-LAST:event_datePickerInActionPerformed

    private void comboGuestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboGuestMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);//        comboPerson.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_comboGuestMouseClicked

    private void comboGuestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGuestActionPerformed
        comboPerson.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_comboGuestActionPerformed

    private void comboPersonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboPersonMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);
        txtIN.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_comboPersonMouseClicked

    private void comboPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPersonActionPerformed
//        txtIN.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_comboPersonActionPerformed

    private void comboRsidItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboRsidItemStateChanged
        comboRsidItemStateChanged();
        //searchPrice();// TODO add your handling code here:
    }//GEN-LAST:event_comboRsidItemStateChanged

    private void comboRsidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboRsidMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);
        //comboGuest.requestFocus();
    }//GEN-LAST:event_comboRsidMouseClicked

    private void comboRsidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRsidActionPerformed
        comboGuest.requestFocus();//        txtGid.requestFocus();        // TODO add your handling code here:
    }//GEN-LAST:event_comboRsidActionPerformed

    private void txtOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOUTActionPerformed
        String txt = txtOUT.getText();
        boolean isTel = false;

        if (txt.matches("\\d{4}-\\d{2}-\\d{2}")) {
            isTel = true;
        }

        if (isTel) {
            reservation();
        } else {

            JOptionPane.showMessageDialog(null, "invalid Date");
            txtOUT.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOUTActionPerformed

    private void datePickerIn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerIn1ActionPerformed
        Date d = datePickerIn1.getDate();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String formatDate = df.format(d);
        txtOUT.setText(formatDate);
    }//GEN-LAST:event_datePickerIn1ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        String rid = (String) table.getValueAt(table.getSelectedRow(), 0);
        double price = (double) table.getValueAt(table.getSelectedRow(), 3);
        String des = (String) table.getValueAt(table.getSelectedRow(), 2);
        txtRoom.setText(rid);
        txtDesription.setText(des);
        dateCountReserve();
        searchPrice1();
        icon();
        double tot = (x + 1) * price;
        txtNewPrice.setText(tot + "");
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        reservation();        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseExited
        jLabel5.setForeground(Color.white);           // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseExited

    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        jLabel5.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MouseEntered

    private void lblDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDeleteMouseClicked
        if (txtRoom.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Sorry! Incomplete...", "Modify Reservation", JOptionPane.WARNING_MESSAGE);

        } else {
            String rid = txtRoom.getText();

            String rsid = (String) comboRsid.getSelectedItem();
            //  PaymentDTO payList = payCntrl.searchId(rsid, rid);
            //  String pyid=payList.getPyid();
            try {
                boolean r1 = resvCntrl.delete(rsid);
                if (r1) {

                    JOptionPane.showMessageDialog(null, "Deleted");
                    comboRsid.removeAllItems();
                    rsidLoard();
                    comboRsidItemStateChanged();

                } else {

                    JOptionPane.showMessageDialog(null, "Delete Failed");
                }

                // TODO add your handling code here:
            } catch (Exception ex) {
                Logger.getLogger(modReservePanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_lblDeleteMouseClicked

    private void lblDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDeleteMouseExited
        lblDelete.setForeground(Color.white);      // TODO add your handling code here:
    }//GEN-LAST:event_lblDeleteMouseExited

    private void lblDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDeleteMouseEntered
        lblDelete.setForeground(Color.black);            // TODO add your handling code here:
    }//GEN-LAST:event_lblDeleteMouseEntered

    private void btnEdit1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEdit1MouseClicked
        if (txtNewPrice.getText().equals("0.0") || txtDesription.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Sorry! Incomplete...", "Modify Reservation", JOptionPane.WARNING_MESSAGE);

        } else {
            update();

        }// TODO add your handling code here:
    }//GEN-LAST:event_btnEdit1MouseClicked

    private void btnEdit1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEdit1MouseEntered
        btnEdit1.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_btnEdit1MouseEntered

    private void btnEdit1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEdit1MouseExited
        btnEdit1.setForeground(Color.white);      // TODO add your handling code here:
    }//GEN-LAST:event_btnEdit1MouseExited

    private void txtDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDayActionPerformed

    private void txtRoomPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoomPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoomPriceActionPerformed

    private void comboGuestItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboGuestItemStateChanged
        try {
            String id = (String) comboGuest.getSelectedItem();
            GuestDTO list = guestCntrl.search(id);
            lblGuestName.setText(list.getName());
        } catch (Exception ex) {
            Logger.getLogger(modifyRoomReservePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboGuestItemStateChanged

    private void lblDelete1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDelete1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);
        txtNewPrice.setText(txtOldPrice.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_lblDelete1MouseClicked

    private void lblDelete1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDelete1MouseExited
        lblDelete1.setForeground(Color.white);     // TODO add your handling code here:
    }//GEN-LAST:event_lblDelete1MouseExited

    private void lblDelete1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDelete1MouseEntered
        lblDelete1.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_lblDelete1MouseEntered

    private void txtINMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtINMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);        // TODO add your handling code here:
    }//GEN-LAST:event_txtINMouseClicked

    private void txtOUTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtOUTMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);        // TODO add your handling code here:
    }//GEN-LAST:event_txtOUTMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnEdit1;
    private javax.swing.JComboBox comboGuest;
    private javax.swing.JComboBox comboPerson;
    private javax.swing.JComboBox<String> comboRsid;
    private org.jdesktop.swingx.JXDatePicker datePickerIn;
    private org.jdesktop.swingx.JXDatePicker datePickerIn1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel lblDelete;
    private javax.swing.JLabel lblDelete1;
    private javax.swing.JLabel lblGuestName;
    private javax.swing.JLabel lblRoomIcon;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtDay;
    private javax.swing.JLabel txtDesription;
    private javax.swing.JTextField txtIN;
    private javax.swing.JTextField txtNewPrice;
    private javax.swing.JTextField txtOUT;
    private javax.swing.JTextField txtOldPrice;
    private javax.swing.JTextField txtRoom;
    private javax.swing.JTextField txtRoomPrice;
    // End of variables declaration//GEN-END:variables
 public void rsidLoard() throws Exception {
        try {
            ArrayList<ReservationDTO> reserveList = resvCntrl.getAllID();
            for (int i = 0; i < reserveList.size(); i++) {
                ReservationDTO reserve = (ReservationDTO) reserveList.get(i);
                comboRsid.addItem(reserve.getRsID());
            }
        } catch (SQLException e) {
            System.out.println(e);
        } catch (ClassNotFoundException e) {
            System.out.println(e);
        }
    }

    public void clear() throws Exception {
        txtIN.setText("");
        txtOUT.setText("");
        //txtGid.setText("");
        txtRoom.setText("");
        // txtPersons.setText("");
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);
        table.removeAll();
        rsidLoard();
    }

    private void view() throws Exception {
        try {
            ArrayList<RoomDTO> roomList = roomCntrl.getAllName();
            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            dtm.setRowCount(0);
            for (RoomDTO c1 : roomList) {
                Object[] rowData = {c1.getRID(), c1.getRoom_Name(), c1.getRoom_Description(), c1.getRoom_Price()};
                dtm.addRow(rowData);
            }
        } catch (SQLException e) {
            System.out.println(e);
        } catch (ClassNotFoundException e) {
            System.out.println(e);

        }
    }

    private void edit() {
        txtRoom.setEnabled(false);
        txtRoom.setDisabledTextColor(new Color(128, 128, 128));
        txtOldPrice.setEnabled(false);
        txtOldPrice.setDisabledTextColor(new Color(128, 128, 128));
        txtNewPrice.setEnabled(false);
        txtNewPrice.setDisabledTextColor(new Color(128, 128, 128));

    }

    private void reservation() {
        try {
            ReservationDTO reserve = new ReservationDTO(txtIN.getText(), txtOUT.getText());
            ArrayList<ReservationDTO> roomList = queryCntrl.getRserveRoom(txtIN.getText(), txtOUT.getText());

            DefaultTableModel dtm = (DefaultTableModel) table.getModel();
            dtm.setRowCount(0);
            for (ReservationDTO c1 : roomList) {

                System.out.println("***" + c1.getrID());

                //Object[] rowData = {c1.getrID()};
                RoomDTO r1 = roomCntrl.search(c1.getrID());

                Object[] row = {r1.getRID(), r1.getRoom_Name(), r1.getRoom_Description(), r1.getRoom_Price()};
                dtm.addRow(row);

            }
            int x = dtm.getRowCount();
            if (x == 0) {
                JOptionPane.showMessageDialog(null, "All Rooms are Reserve");
            }

        } catch (Exception ex) {
            Logger.getLogger(modReservePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void update() {
        try {
            String rid = txtRoom.getText();
            String rsid = (String) comboRsid.getSelectedItem();
            String gid = (String) comboGuest.getSelectedItem();
            String persons = (String) comboPerson.getSelectedItem();
            String in = txtIN.getText();
            String out = txtOUT.getText();
            double price = Double.parseDouble(txtNewPrice.getText());
            int person = Integer.parseInt(persons);
            ReservationDTO reserve = new ReservationDTO(rsid, gid, rid, person, in, out, price);
            boolean update = resvCntrl.update(reserve);
            if (update) {
                JOptionPane.showMessageDialog(null, "Update Success");
                payment();
                clear();

            } else {
                JOptionPane.showMessageDialog(null, "Update Failed");
            }
        } catch (Exception ex) {
            Logger.getLogger(modReservePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void payment() {
        String id = (String) comboRsid.getSelectedItem();
        // String in = txtIN.getText();
        // String out = txtOUT.getText();
        double old = Double.parseDouble(txtOldPrice.getText());
        double price = Double.parseDouble(txtNewPrice.getText());
        String rid = txtRoom.getText();
        String name = lblGuestName.getText();
        String in = txtIN.getText();
        String out = txtOUT.getText();
        String gid = (String) comboGuest.getSelectedItem();

        jPanel2.removeAll();
        jPanel2.repaint();
        jPanel2.revalidate();
        ModifyPayment r1 = new ModifyPayment(id, old, price, rid, oldRid, in, out, name, gid);//(id, in, out, person, gid);
        r1.setSize(jPanel2.getSize());

        jPanel2.add(r1);
    }

    private void dateCountReserve() {

        try {
            SimpleDateFormat s1 = new SimpleDateFormat("yyyy-MM-dd");
            String in1 = txtIN.getText();
            String in2 = txtOUT.getText();

            Date d1 = s1.parse(in1);
            Date d2 = s1.parse(in2);

            long diff = d2.getTime() - d1.getTime();
            x = TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);
            //System.out.println("Day : " + x);

            int y = (int) x;
            txtDay.setText(y + 1 + "");

        } catch (ParseException ex) {
            Logger.getLogger(publicPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void searchPrice() {
        try {
            String rsid=(String)comboRsid.getSelectedItem();
            String rid=txtRoom.getText();
            PaymentDTO se=payCntrl.searchId(rsid,rid);
            txtOldPrice.setText(se.getAdvance()+"");
            RoomDTO c1 = roomCntrl.search(txtRoom.getText());
            txtRoomPrice.setText(c1.getRoom_Price() + "");
        } catch (Exception ex) {
            Logger.getLogger(modReservePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void icon() {
        if (txtRoom.getText().equals("R01")) {
            lblRoomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/family suite a.png")));

        } else {
            if (txtRoom.getText().equals("R02")) {
                lblRoomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/family suite a.png")));

            } else {
                if (txtRoom.getText().equals("R03")) {
                    lblRoomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/delux villa b.png")));

                } else {
                    if (txtRoom.getText().equals("R04")) {
                        lblRoomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/delux double room c.png")));
                    } else {
                        if (txtRoom.getText().equals("R05")) {
                            lblRoomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/Help_48px.png")));
                        } else {
                            if (txtRoom.getText().equals("R06")) {
                                lblRoomIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/Help_48px.png")));
                            }

                        }
                    }

                }
            }

        }
    }

    private void gidLoard() {
        try {
            ArrayList<GuestDTO> list = guestCntrl.getAllID();
            for (int i = 0; i < list.size(); i++) {
                GuestDTO combo = list.get(i);
                comboGuest.addItem(combo.getGID());

            }
        } catch (Exception ex) {
            Logger.getLogger(modReservePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void comboRsidItemStateChanged() {
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);

        String id = (String) comboRsid.getSelectedItem();
        icon();
        try {
            ReservationDTO res = resvCntrl.search(id);
            if (res != null) {
                searchPrice();
                comboGuest.setSelectedItem(res.getgID());
                txtRoom.setText(res.getrID());
                oldRid = res.getrID();
                txtIN.setText(res.getCheck_In());
                txtOUT.setText(res.getCheck_Out());
                comboPerson.setSelectedItem(res.getPersons());
                //txtPersons.setText(res.getPersons() + "");
                txtOldPrice.setText(res.getPrice() + "");
                txtNewPrice.setText(res.getPrice() + "");
            } else {
                //JOptionPane.showMessageDialog(null, "Cannot find Symbol");

            }
        } catch (Exception ex) {
            Logger.getLogger(modReservePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        dateCountReserve();
        searchPrice();

    }

    private void searchPrice1() {
         try {
            
            RoomDTO c1 = roomCntrl.search(txtRoom.getText());
            txtRoomPrice.setText(c1.getRoom_Price() + "");
        } catch (Exception ex) {
            Logger.getLogger(modReservePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
