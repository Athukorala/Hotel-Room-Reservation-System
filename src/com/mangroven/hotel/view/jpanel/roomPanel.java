/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mangroven.hotel.view.jpanel;

import com.mangroven.hotel.view.jframe.bookD;
import com.mangroven.hotel.view.jframe.bookF;
import com.mangroven.hotel.view.jframe.BookC;
import com.mangroven.hotel.view.jframe.BookE;
import com.mangroven.hotel.view.jframe.bookB;
import com.mangroven.hotel.view.jframe.book;
import com.mangroven.hotel.controller.ControllerFactory;
import com.mangroven.hotel.controller.custom.QueryController;
import com.mangroven.hotel.controller.custom.ReservationController;
import com.mangroven.hotel.controller.custom.RoomController;
import com.mangroven.hotel.dao.db.ConnectionFactory;
import com.mangroven.hotel.dto.GuestDTO;
import com.mangroven.hotel.dto.ReservationDTO;
import com.mangroven.hotel.dto.RoomDTO;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author tharindu
 */
public class roomPanel extends javax.swing.JPanel {

    private String in;
    private String out;
    private ReservationController res;
    private QueryController queryCntrl;
    private RoomController roomCntrl;

    /**
     * Creates new form roomPanel
     */
    public roomPanel() throws Exception {
        initComponents();
        edit1();

        roomCntrl = (RoomController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ROOM);
        comboRoom.setVisible(false);
        roomPrice();
        animation();
    }

    public roomPanel(String in, String out) throws Exception {

        initComponents();
        edit();
        roomCntrl = (RoomController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ROOM);
        queryCntrl = (QueryController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.QUERY);
        comboRoom.setVisible(false);
        res = (ReservationController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.RESERVATION);
        // roomPrice();

        this.in = in;
        this.out = out;

        reserveDetails();
        roomCantReserve();
        animation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lblC = new javax.swing.JLabel();
        lblA = new javax.swing.JLabel();
        lblB = new javax.swing.JLabel();
        lblD = new javax.swing.JLabel();
        lblBName = new javax.swing.JLabel();
        lblAName = new javax.swing.JLabel();
        lblDName = new javax.swing.JLabel();
        lblCName = new javax.swing.JLabel();
        A = new javax.swing.JLabel();
        D = new javax.swing.JLabel();
        C = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        ro2 = new javax.swing.JLabel();
        ro1 = new javax.swing.JLabel();
        ro4 = new javax.swing.JLabel();
        ro3 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        r4 = new javax.swing.JLabel();
        r1 = new javax.swing.JLabel();
        r2 = new javax.swing.JLabel();
        r3 = new javax.swing.JLabel();
        comboRoom = new javax.swing.JComboBox<String>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDDes = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtADes = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtBDes = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtCDes = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtDDes1 = new javax.swing.JTextArea();
        lblF = new javax.swing.JLabel();
        lblE = new javax.swing.JLabel();
        B = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtDDes2 = new javax.swing.JTextArea();
        r6 = new javax.swing.JLabel();
        r5 = new javax.swing.JLabel();
        lblDName1 = new javax.swing.JLabel();
        D1 = new javax.swing.JLabel();
        lblDName2 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        ro6 = new javax.swing.JLabel();
        ro5 = new javax.swing.JLabel();
        D2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 254, 254));

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));

        jPanel1.setBackground(new java.awt.Color(243, 243, 243));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/delux villa b.png"))); // NOI18N
        lblC.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        lblA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/family suite a.png"))); // NOI18N
        lblA.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        lblB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/family suite a.png"))); // NOI18N
        lblB.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        lblD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/delux double room c.png"))); // NOI18N
        lblD.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        lblBName.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblBName.setForeground(new java.awt.Color(0, 25, 255));

        lblAName.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblAName.setForeground(new java.awt.Color(0, 25, 255));

        lblDName.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblDName.setForeground(new java.awt.Color(0, 25, 255));

        lblCName.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblCName.setForeground(new java.awt.Color(0, 25, 255));

        A.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        A.setForeground(new java.awt.Color(0, 153, 0));

        D.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        D.setForeground(new java.awt.Color(0, 153, 0));

        C.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        C.setForeground(new java.awt.Color(0, 153, 0));

        jLabel22.setBackground(new java.awt.Color(240, 208, 32));
        jLabel22.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Check");
        jLabel22.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel22.setOpaque(true);
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel22MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel22MouseExited(evt);
            }
        });

        jLabel23.setBackground(new java.awt.Color(240, 208, 32));
        jLabel23.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Check");
        jLabel23.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel23.setOpaque(true);
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel23MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel23MouseEntered(evt);
            }
        });

        jLabel24.setBackground(new java.awt.Color(240, 208, 32));
        jLabel24.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Check");
        jLabel24.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.setOpaque(true);
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel24MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel24MouseEntered(evt);
            }
        });

        jLabel25.setBackground(new java.awt.Color(240, 208, 32));
        jLabel25.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Check");
        jLabel25.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel25.setOpaque(true);
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel25MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel25MouseExited(evt);
            }
        });

        ro2.setBackground(new java.awt.Color(253, 83, 63));
        ro2.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        ro2.setForeground(new java.awt.Color(254, 254, 254));
        ro2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ro2.setText("Reserve");
        ro2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ro2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ro2.setOpaque(true);
        ro2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ro2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ro2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ro2MouseExited(evt);
            }
        });

        ro1.setBackground(new java.awt.Color(253, 83, 63));
        ro1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        ro1.setForeground(new java.awt.Color(254, 254, 254));
        ro1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ro1.setText("Reserve");
        ro1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ro1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ro1.setOpaque(true);
        ro1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ro1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ro1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ro1MouseExited(evt);
            }
        });

        ro4.setBackground(new java.awt.Color(253, 83, 63));
        ro4.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        ro4.setForeground(new java.awt.Color(254, 254, 254));
        ro4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ro4.setText("Reserve");
        ro4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ro4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ro4.setOpaque(true);
        ro4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ro4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ro4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ro4MouseExited(evt);
            }
        });

        ro3.setBackground(new java.awt.Color(253, 83, 63));
        ro3.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        ro3.setForeground(new java.awt.Color(254, 254, 254));
        ro3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ro3.setText("Reserve");
        ro3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ro3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ro3.setOpaque(true);
        ro3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ro3MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ro3MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ro3MouseEntered(evt);
            }
        });

        jLabel30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
        });

        jLabel31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel31MouseEntered(evt);
            }
        });

        r4.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        r4.setText("R04");

        r1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        r1.setText("R01");

        r2.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        r2.setText("R02");

        r3.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        r3.setText("R03");

        txtDDes.setEditable(false);
        txtDDes.setColumns(20);
        txtDDes.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        txtDDes.setRows(5);
        txtDDes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane2.setViewportView(txtDDes);

        txtADes.setEditable(false);
        txtADes.setColumns(20);
        txtADes.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        txtADes.setRows(5);
        txtADes.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtADes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane3.setViewportView(txtADes);

        txtBDes.setEditable(false);
        txtBDes.setColumns(20);
        txtBDes.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        txtBDes.setRows(5);
        txtBDes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane4.setViewportView(txtBDes);

        txtCDes.setEditable(false);
        txtCDes.setColumns(20);
        txtCDes.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        txtCDes.setRows(5);
        txtCDes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane5.setViewportView(txtCDes);

        txtDDes1.setEditable(false);
        txtDDes1.setColumns(20);
        txtDDes1.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        txtDDes1.setRows(5);
        txtDDes1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane6.setViewportView(txtDDes1);

        lblF.setBackground(new java.awt.Color(204, 204, 204));
        lblF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/Help_48px_1.png"))); // NOI18N
        lblF.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
        lblF.setOpaque(true);

        lblE.setBackground(new java.awt.Color(204, 204, 204));
        lblE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/Help_48px.png"))); // NOI18N
        lblE.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
        lblE.setOpaque(true);

        B.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        B.setForeground(new java.awt.Color(0, 153, 0));

        txtDDes2.setEditable(false);
        txtDDes2.setColumns(20);
        txtDDes2.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        txtDDes2.setRows(5);
        txtDDes2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane7.setViewportView(txtDDes2);

        r6.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        r6.setText("R06");

        r5.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        r5.setText("R05");

        lblDName1.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblDName1.setForeground(new java.awt.Color(0, 25, 255));

        D1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        D1.setForeground(new java.awt.Color(0, 153, 0));

        lblDName2.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        lblDName2.setForeground(new java.awt.Color(0, 25, 255));

        jLabel26.setBackground(new java.awt.Color(240, 208, 32));
        jLabel26.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Check");
        jLabel26.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel26.setOpaque(true);
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel26MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel26MouseExited(evt);
            }
        });

        jLabel27.setBackground(new java.awt.Color(240, 208, 32));
        jLabel27.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Check");
        jLabel27.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel27.setOpaque(true);
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel27MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel27MouseExited(evt);
            }
        });

        ro6.setBackground(new java.awt.Color(253, 83, 63));
        ro6.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        ro6.setForeground(new java.awt.Color(254, 254, 254));
        ro6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ro6.setText("Reserve");
        ro6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ro6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ro6.setOpaque(true);
        ro6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ro6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ro6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ro6MouseExited(evt);
            }
        });

        ro5.setBackground(new java.awt.Color(253, 83, 63));
        ro5.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        ro5.setForeground(new java.awt.Color(254, 254, 254));
        ro5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ro5.setText("Reserve");
        ro5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ro5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ro5.setOpaque(true);
        ro5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ro5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ro5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ro5MouseExited(evt);
            }
        });

        D2.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        D2.setForeground(new java.awt.Color(0, 153, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(r4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(r6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblD))
                            .addComponent(lblF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(r1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(comboRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblA))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(r2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblB))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(r3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblC))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(r5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(63, 63, 63)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCName, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(D2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDName1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(D1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDName2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(38, 38, 38)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(256, 256, 256)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ro5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ro6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ro4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ro3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(ro1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(ro2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblAName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(r1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(comboRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblA, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ro1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(r2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addComponent(lblB, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ro2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblBName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(B, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(r3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ro3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblCName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(C, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(lblC, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ro4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(77, 77, 77)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ro5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ro6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblDName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(D, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(7, 7, 7))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(r4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblD, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(r5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblE, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblDName1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(D2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(lblDName2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(D1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(lblF, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addContainerGap()))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(r6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1089, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 132, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        bookD b4 = null;
        try {
            b4 = new bookD();
        } catch (IOException ex) {
            Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        b4.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        book b1 = null;
        try {
            b1 = new book();
        } catch (IOException ex) {
            Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        b1.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        bookB b3 = null;
        try {
            b3 = new bookB();
        } catch (IOException ex) {
            Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        b3.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        BookC b2 = null;
        try {
            b2 = new BookC();
        } catch (IOException ex) {
            Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        b2.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel25MouseClicked

    private void ro2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro2MouseClicked
        if (ro2.getText().equals("This is Reserved") | ro3.getText().equals("Can't Reserve")) {
            JOptionPane.showMessageDialog(null, "Sorry! This Room has Reserved...", "Can't Reserve", JOptionPane.WARNING_MESSAGE);

        } else {

            String rid = r2.getText();

            publicPanel p = null;
            try {
                p = new publicPanel(rid, in, out);
            } catch (IOException ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            p.setVisible(true);
            jPanel1.removeAll();
            jPanel1.repaint();
            jPanel1.revalidate();
            p.setSize(jPanel1.getSize());
            jPanel1.add(p);
        }
    }//GEN-LAST:event_ro2MouseClicked

    private void ro1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro1MouseClicked
        if (ro1.getText().equals("This is Reserved") | ro3.getText().equals("Can't Reserve")) {
            JOptionPane.showMessageDialog(null, "Sorry! This Room has Reserved...", "Can't Reserve", JOptionPane.WARNING_MESSAGE);

        } else {

            try {
               
                String rid = r1.getText();

                publicPanel p = null;
                p = new publicPanel(rid, in, out);

                p.setVisible(true);
                jPanel1.removeAll();
                jPanel1.repaint();
                jPanel1.revalidate();
                p.setSize(jPanel1.getSize());
                jPanel1.add(p);
            } catch (Exception ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


        /* try {
         Timer tmrAnimation = new Timer(1000, new ActionListener() {
            
         @Override
         public void actionPerformed(ActionEvent e) {
            
         lblA.setLocation(lblA.getLocation().x + 100, lblA.getLocation().y);
         if (lblA.getLocation().x > roomPanel.this.getWidth()) {
            
            
            
         }
         }
         });
         tmrAnimation.start();
            
         */

    }//GEN-LAST:event_ro1MouseClicked

    private void ro1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro1MouseEntered
        ro1.setForeground(Color.black);         // TODO add your handling code here:
    }//GEN-LAST:event_ro1MouseEntered

    private void ro4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro4MouseClicked
        if (ro4.getText().equals("This is Reserved") | ro3.getText().equals("Can't Reserve")) {
            JOptionPane.showMessageDialog(null, "Sorry! This Room has Reserved...", "Can't Reserve", JOptionPane.WARNING_MESSAGE);

        } else {

            String rid = r4.getText();

            publicPanel p = null;
            try {
                p = new publicPanel(rid, in, out);
            } catch (IOException ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            p.setVisible(true);
            jPanel1.removeAll();
            jPanel1.repaint();
            jPanel1.revalidate();
            p.setSize(jPanel1.getSize());
            jPanel1.add(p);
        }//   this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_ro4MouseClicked

    private void ro3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro3MouseClicked
        if (ro3.getText().equals("This is Reserved") | ro3.getText().equals("Can't Reserve")) {
            JOptionPane.showMessageDialog(null, "Sorry! This Room has Reserved...", "Can't Reserve", JOptionPane.WARNING_MESSAGE);

        } else {

            String rid = r3.getText();

            publicPanel p = null;
            try {
                p = new publicPanel(rid, in, out);
            } catch (IOException ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            p.setVisible(true);
            jPanel1.removeAll();
            jPanel1.repaint();
            jPanel1.revalidate();
            p.setSize(jPanel1.getSize());
            jPanel1.add(p);
        }// TODO add your handling code here:
    }//GEN-LAST:event_ro3MouseClicked

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked

    }//GEN-LAST:event_jLabel30MouseClicked

    private void jLabel23MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseEntered
        jLabel23.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel23MouseEntered

    private void jLabel31MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseEntered
        //   jLabel31.setForeground(Color.white);         // TODO add your handling code here:
    }//GEN-LAST:event_jLabel31MouseEntered

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked

    }//GEN-LAST:event_jLabel31MouseClicked

    private void jLabel23MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseExited
        jLabel23.setForeground(Color.black);           // TODO add your handling code here:
    }//GEN-LAST:event_jLabel23MouseExited

    private void ro1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro1MouseExited
        ro1.setForeground(Color.white);          // TODO add your handling code here:
    }//GEN-LAST:event_ro1MouseExited

    private void jLabel24MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseEntered
        jLabel24.setForeground(Color.white);          // TODO add your handling code here:
    }//GEN-LAST:event_jLabel24MouseEntered

    private void jLabel24MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseExited
        jLabel24.setForeground(Color.black);          // TODO add your handling code here:
    }//GEN-LAST:event_jLabel24MouseExited

    private void ro2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro2MouseEntered
        ro2.setForeground(Color.black);          // TODO add your handling code here:
    }//GEN-LAST:event_ro2MouseEntered

    private void ro2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro2MouseExited
        ro2.setForeground(Color.white);          // TODO add your handling code here:
    }//GEN-LAST:event_ro2MouseExited

    private void ro3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro3MouseEntered
        ro3.setForeground(Color.black);     // TODO add your handling code here:
    }//GEN-LAST:event_ro3MouseEntered

    private void ro3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro3MouseExited
        ro3.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_ro3MouseExited

    private void ro4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro4MouseEntered
        ro4.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_ro4MouseEntered

    private void ro4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro4MouseExited
        ro4.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_ro4MouseExited

    private void jLabel22MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseEntered
        jLabel22.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel22MouseEntered

    private void jLabel22MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseExited
        jLabel22.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel22MouseExited

    private void jLabel25MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseEntered
        jLabel25.setForeground(Color.white);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel25MouseEntered

    private void jLabel25MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseExited
        jLabel25.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel25MouseExited

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        BookE b41 = new BookE();
        b41.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel26MouseClicked

    private void jLabel26MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel26MouseEntered

    private void jLabel26MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel26MouseExited

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        bookF b241 = new bookF();
        b241.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jLabel27MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel27MouseEntered

    private void jLabel27MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel27MouseExited

    private void ro6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro6MouseClicked
        if (ro6.getText().equals("This is Reserved") | ro6.getText().equals("Can't Reserve")) {
            JOptionPane.showMessageDialog(null, "Sorry! This Room has Reserved...", "Can't Reserve", JOptionPane.WARNING_MESSAGE);

        } else {

            String rid = r6.getText();

            publicPanel p = null;
            try {
                p = new publicPanel(rid, in, out);
            } catch (IOException ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            p.setVisible(true);
            jPanel1.removeAll();
            jPanel1.repaint();
            jPanel1.revalidate();
            p.setSize(jPanel1.getSize());
            jPanel1.add(p);
        }// TODO add your handling code here:
    }//GEN-LAST:event_ro6MouseClicked

    private void ro6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro6MouseExited
        ro6.setForeground(Color.white);    // TODO add your handling code here:
    }//GEN-LAST:event_ro6MouseExited

    private void ro6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro6MouseEntered
        ro6.setForeground(Color.black);  // TODO add your handling code here:
    }//GEN-LAST:event_ro6MouseEntered

    private void ro5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro5MouseClicked
        if (ro5.getText().equals("This is Reserved") | ro5.getText().equals("Can't Reserve")) {
            JOptionPane.showMessageDialog(null, "Sorry! This Room has Reserved...", "Can't Reserve", JOptionPane.WARNING_MESSAGE);

        } else {

            String rid = r5.getText();

            publicPanel p = null;
            try {
                p = new publicPanel(rid, in, out);
            } catch (IOException ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(roomPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            p.setVisible(true);
            jPanel1.removeAll();
            jPanel1.repaint();
            jPanel1.revalidate();
            p.setSize(jPanel1.getSize());
            jPanel1.add(p);
        }// TODO add your handling code here:
    }//GEN-LAST:event_ro5MouseClicked

    private void ro5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro5MouseExited
        ro5.setForeground(Color.white);  // TODO add your handling code here:
    }//GEN-LAST:event_ro5MouseExited

    private void ro5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ro5MouseEntered
        ro5.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_ro5MouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel A;
    private javax.swing.JLabel B;
    private javax.swing.JLabel C;
    private javax.swing.JLabel D;
    private javax.swing.JLabel D1;
    private javax.swing.JLabel D2;
    private javax.swing.JComboBox<String> comboRoom;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblA;
    private javax.swing.JLabel lblAName;
    private javax.swing.JLabel lblB;
    private javax.swing.JLabel lblBName;
    private javax.swing.JLabel lblC;
    private javax.swing.JLabel lblCName;
    private javax.swing.JLabel lblD;
    private javax.swing.JLabel lblDName;
    private javax.swing.JLabel lblDName1;
    private javax.swing.JLabel lblDName2;
    private javax.swing.JLabel lblE;
    private javax.swing.JLabel lblF;
    private javax.swing.JLabel r1;
    private javax.swing.JLabel r2;
    private javax.swing.JLabel r3;
    private javax.swing.JLabel r4;
    private javax.swing.JLabel r5;
    private javax.swing.JLabel r6;
    private javax.swing.JLabel ro1;
    private javax.swing.JLabel ro2;
    private javax.swing.JLabel ro3;
    private javax.swing.JLabel ro4;
    private javax.swing.JLabel ro5;
    private javax.swing.JLabel ro6;
    private javax.swing.JTextArea txtADes;
    private javax.swing.JTextArea txtBDes;
    private javax.swing.JTextArea txtCDes;
    private javax.swing.JTextArea txtDDes;
    private javax.swing.JTextArea txtDDes1;
    private javax.swing.JTextArea txtDDes2;
    // End of variables declaration//GEN-END:variables
    /*public void set() {
    
     String sid = (String) comboRoom.getSelectedItem();
     System.out.println(sid);
     switch (sid) {
     case "R01":
     ro1.setEnabled(false);
     ro1.setBackground(Color.green);
     break;
    
     case "R02":
     ro2.setEnabled(false);
     ro2.setBackground(Color.green);
     break;
    
     case "R03":
     ro3.setEnabled(false);
     ro3.setBackground(Color.green);
     break;
    
     case "R04":
     ro4.setEnabled(false);
     ro4.setBackground(Color.green);
     break;
     case "null":
     break;
     }
    
     }*/

    private void roomPrice() throws Exception {
        String r01 = r1.getText();
        RoomDTO c1 = roomCntrl.search(r01);
        if (c1 != null) {
            A.setText(c1.getRoom_Price() + "");
            lblAName.setText(c1.getRoom_Name());
            txtADes.setText(c1.getRoom_Description());
        }
        String r02 = r2.getText();
        RoomDTO c2 = roomCntrl.search(r02);
        if (c2 != null) {
            B.setText(c2.getRoom_Price() + "");
            lblBName.setText(c2.getRoom_Name());
            txtBDes.setText(c2.getRoom_Description());
        }
        String r03 = r3.getText();
        RoomDTO c3 = roomCntrl.search(r03);
        if (c3 != null) {
            C.setText(c3.getRoom_Price() + "");
            lblCName.setText(c3.getRoom_Name());
            txtCDes.setText(c3.getRoom_Description());
        }
        String r04 = r4.getText();
        RoomDTO c4 = roomCntrl.search(r04);
        if (c4 != null) {
            D.setText(c4.getRoom_Price() + "");
            lblDName.setText(c4.getRoom_Name());
            txtDDes.setText(c4.getRoom_Description());
        }
        String r05 = r5.getText();
        RoomDTO c5 = roomCntrl.search(r05);
        if (c5 != null) {
            D2.setText(c5.getRoom_Price() + "");
            lblDName1.setText(c5.getRoom_Name());
            txtDDes1.setText(c5.getRoom_Description());
        }
        String r06 = r6.getText();
        RoomDTO c6 = roomCntrl.search(r06);
        if (c6 != null) {
            D1.setText(c6.getRoom_Price() + "");
            lblDName2.setText(c6.getRoom_Name());
            txtDDes2.setText(c6.getRoom_Description());
        }
    }

    private void reserveDetails() throws Exception {
        ReservationDTO reserve = new ReservationDTO(in, out);
        ArrayList<ReservationDTO> roomList = queryCntrl.getRserveRoom(in, out);

        for (int i = 0; i < roomList.size(); i++) {
            ReservationDTO res = (ReservationDTO) roomList.get(i);
            comboRoom.addItem(res.getrID());
            String sid = (String) comboRoom.getSelectedItem();
            // System.out.println(sid);
            switch (sid) {
                case "R01":
                    ro1.setText("Reserve");
                    ro1.setBackground(new Color(21, 190, 41));
                    break;

                case "R02":
                    ro2.setText("Reserve");
                    ro2.setBackground(new Color(21, 190, 41));
                    break;

                case "R03":
                    ro3.setText("Reserve");
                    ro3.setBackground(new Color(21, 190, 41));
                    break;

                case "R04":
                    ro4.setText("Reserve");
                    ro4.setBackground(new Color(21, 190, 41));
                    break;
                case "R05":
                    ro5.setText("Reserve");
                    ro5.setBackground(new Color(21, 190, 41));
                    break;
                case "R06":
                    ro6.setText("Reserve");
                    ro6.setBackground(new Color(21, 190, 41));
                    break;
                default:
                    return;

            }
            comboRoom.removeAllItems();
        }
    }

    private void edit() {
        /*   if(txtADes.getText().equals("")|txtBDes.getText().equals("")|txtCDes.getText().equals("")|txtDDes.getText().equals("")|txtDDes1.getText().equals("")|txtDDes2.getText().equals("")){
        
         }*/
        ro1.setText("This is Reserved");
        ro2.setText("This is Reserved");
        ro3.setText("This is Reserved");
        ro4.setText("This is Reserved");
        ro6.setText("This is Reserved");
        ro5.setText("This is Reserved");

    }

    private void edit1() {
        ro1.setText("Can't Reserve");
        ro2.setText("Can't Reserve");
        ro3.setText("Can't Reserve");
        ro4.setText("Can't Reserve");
        ro6.setText("Can't Reserve");
        ro5.setText("Can't Reserve");

    }

    private void roomCantReserve() throws Exception {
        String r01 = r1.getText();
        RoomDTO c1 = roomCntrl.search(r01);
        if (c1 != null) {
            A.setText(c1.getRoom_Price() + "");
            txtADes.setText(c1.getRoom_Description());
            if (A.getText().equals("0.0") | txtADes.getText().equals("")) {
                ro1.setText("Can't Reserve");
                ro1.setBackground(new Color(253, 83, 63));
            }
            lblAName.setText(c1.getRoom_Name());

        }
        String r02 = r2.getText();
        RoomDTO c2 = roomCntrl.search(r02);
        if (c2 != null) {
            B.setText(c2.getRoom_Price() + "");
            txtBDes.setText(c2.getRoom_Description());

            if (B.getText().equals("0.0") | txtBDes.getText().equals("")) {
                ro2.setText("Can't Reserve");
                ro2.setBackground(new Color(253, 83, 63));
            }
            lblBName.setText(c2.getRoom_Name());

        }
        String r03 = r3.getText();
        RoomDTO c3 = roomCntrl.search(r03);
        if (c3 != null) {
            C.setText(c3.getRoom_Price() + "");
            txtCDes.setText(c3.getRoom_Description());
            if (C.getText().equals("0.0") | txtCDes.getText().equals("")) {
                ro3.setText("Can't Reserve");
                ro3.setBackground(new Color(253, 83, 63));
            }
            lblCName.setText(c3.getRoom_Name());

        }
        String r04 = r4.getText();
        RoomDTO c4 = roomCntrl.search(r04);
        if (c4 != null) {
            D.setText(c4.getRoom_Price() + "");
            txtDDes.setText(c4.getRoom_Description());
            if (D.getText().equals("0.0") | txtDDes.getText().equals("")) {
                ro4.setText("Can't Reserve");
                ro4.setBackground(new Color(253, 83, 63));
            }
            lblDName.setText(c4.getRoom_Name());

        }
        String r05 = r5.getText();
        RoomDTO c5 = roomCntrl.search(r05);
        if (c5 != null) {
            D2.setText(c5.getRoom_Price() + "");

            txtDDes1.setText(c5.getRoom_Description());

            if (D2.getText().equals("0.0") | txtDDes1.getText().equals("")) {
                ro5.setText("Can't Reserve");
                ro5.setBackground(new Color(253, 83, 63));
            }
            lblDName1.setText(c5.getRoom_Name());
        }
        String r06 = r6.getText();
        RoomDTO c6 = roomCntrl.search(r06);
        if (c6 != null) {
            D1.setText(c6.getRoom_Price() + "");
            txtDDes2.setText(c6.getRoom_Description());
            if (D1.getText().equals("0.0") | txtDDes2.getText().equals("")) {
                ro6.setText("Can't Reserve");
                ro6.setBackground(new Color(253, 83, 63));
            }
            lblDName2.setText(c6.getRoom_Name());

        }
    }

    private void animation() {
        Timer tmrAnimation = new Timer(350, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                lblA.setLocation(lblA.getLocation().x + 7, lblA.getLocation().y);
                if (lblA.getLocation().y > roomPanel.this.getHeight()) {
                    lblA.setLocation(0, 0);
                }
                lblB.setLocation(lblB.getLocation().x + 7, lblB.getLocation().y);
                if (lblB.getLocation().y > roomPanel.this.getHeight()) {
                    lblB.setLocation(0, 0);
                }
                lblC.setLocation(lblC.getLocation().x + 7, lblC.getLocation().y);
                if (lblC.getLocation().y > roomPanel.this.getHeight()) {
                    lblC.setLocation(0, 0);
                }
                lblD.setLocation(lblD.getLocation().x + 7, lblD.getLocation().y);
                if (lblD.getLocation().y > roomPanel.this.getHeight()) {
                    lblD.setLocation(0, 0);
                }
                lblE.setLocation(lblE.getLocation().x + 7, lblE.getLocation().y);
                if (lblE.getLocation().y > roomPanel.this.getHeight()) {
                    lblE.setLocation(0, 0);
                }
                lblF.setLocation(lblF.getLocation().x + 7, lblF.getLocation().y);
                if (lblF.getLocation().y > roomPanel.this.getHeight()) {
                    lblF.setLocation(0, 0);
                }
            }
        });
        tmrAnimation.start();
    }
}
