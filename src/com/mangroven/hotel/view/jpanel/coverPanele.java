/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mangroven.hotel.view.jpanel;




import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.design.events.PropagationChangeListener;
import org.jdesktop.swingx.JXDatePicker;
import org.jdesktop.swingx.JXMonthView;
import org.jdesktop.swingx.calendar.CalendarUtils;

/**
 *
 * @author tharindu
 */
public class coverPanele extends javax.swing.JPanel {

    int timeRun = 0;

    /**
     * Creates new form coverPanele
     */
    public coverPanele() {

        initComponents();
        ShowTime();
        validationDate();
        disableCheckInDate();

        /* Date[] dates={new Date()};
         datePickerIn.getMonthView().setUnselectableDates(dates);*/
        //datePickerIn.getMonthView().setUpperBound(Date.from(Instant.MIN));
        /*    JXDatePicker JXDatePicker picker = new JXDatePicker();
         JXMonthView cal=picker.getMonthView();
                
         cal.setTimeZone();*/
        /*Date[] dates={new Date()};
         datePickerIn.getMonthView().setZoomable(true);
        
         Calendar cal=Calendar.getInstance();
         cal.set(2006,7,1);
         long mili=cal.getTimeInMillis();
         datePickerIn.getMonthView().setUpperBound(Date.from(Instant.EPOCH));*/
        //JXDatePicker picker=new JXDatePicker();
        /*  Calendar cal=datePickerIn.getMonthView().getCalendar();
         cal.setTime(new Date());
         datePickerIn.getMonthView().setLowerBound(cal.getTime());
         CalendarUtils.endOfWeek(cal);
         cal.add(Calendar.DATE,1);
         datePickerIn.getMonthView().setUpperBound(cal.getTime());
         */
        Calendar cal = Calendar.getInstance();
        cal.add(Calendar.DATE, 0);
        datePickerIn.getMonthView().setLowerBound(cal.getTime());
        
      cal.add(Calendar.DATE, 0);
        datePickerOut.getMonthView().setLowerBound(cal.getTime());
        
        
        /* Calendar cal2=datePickerIn.getMonthView().getCalendar();
         //cal2.set(2017,06,05);
         long mili=cal2.getTimeInMillis();
         datePickerOut.getMonthView().setLowerBound(Date.from(Instant.ofEpochMilli(mili)));
        /*Calendar cal2=datePickerIn.getMonthView().getCalendar();
        //cal2.setTime(cal.getTime());
        
        //CalendarUtils.endOfWeek(cal2);
        //cal2.add(Calendar.DATE,Calendar.WEEK_OF_YEAR);
        datePickerOut.getMonthView().setLowerBound(cal2.getTime());*/
        
         /*Date d3 = datePickerIn.getDate();
         datePickerOut.getMonthView().setLowerBound(d3);
         
         /*Calendar cal2=Calendar.getInstance();
         cal2.add(Calendar.DATE,0);
         datePickerOut.getMonthView().setLowerBound(cal2.getTime());*/
        /* datePickerOut.addPropertyChangeListener("date", new PropertyChangeListener() {
             
             @Override
             public void propertyChange(PropertyChangeEvent evt) {
                 Date d2 = datePickerIn.getDate();
                 datePickerOut.getMonthView().setLowerBound(d2);
             }
         });*/

      // datePickerOut.getMonthView().setUnselectableDates(d); 
    }

    public void ShowTime() {
        Thread t = new Thread() {
            public void run() {
                while (timeRun == 0) {
                    Calendar cal = new GregorianCalendar();

                    Date d1 = new Date(); //java.util.Date ->get Current date and time
                    SimpleDateFormat df = new SimpleDateFormat("yyyy - MM - dd");
                    String formatDate = df.format(d1);
                   // checkIn.setText(formatDate);
                    // checkOut.setText(formatDate);

                }
            }
        };
        t.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCenter2 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        checkIn = new javax.swing.JLabel();
        checkOut = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        datePickerOut = new org.jdesktop.swingx.JXDatePicker();
        datePickerIn = new org.jdesktop.swingx.JXDatePicker();
        jSeparator1 = new javax.swing.JSeparator();
        lblTopic = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 254, 254));

        pnlCenter2.setBackground(new java.awt.Color(243, 243, 243));
        pnlCenter2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlCenter2.setPreferredSize(new java.awt.Dimension(1100, 974));

        jPanel14.setBackground(new java.awt.Color(254, 254, 254));
        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setBackground(new java.awt.Color(255, 255, 204));
        jLabel13.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 9, 120));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/Calendar.png"))); // NOI18N
        jLabel13.setText("        Check In Date");

        checkIn.setBackground(new java.awt.Color(236, 236, 236));
        checkIn.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        checkIn.setForeground(new java.awt.Color(2, 8, 102));
        checkIn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        checkIn.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        checkIn.setOpaque(true);
        checkIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkInMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkInMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkInMouseEntered(evt);
            }
        });

        checkOut.setBackground(new java.awt.Color(236, 236, 236));
        checkOut.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        checkOut.setForeground(new java.awt.Color(2, 8, 102));
        checkOut.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        checkOut.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        checkOut.setOpaque(true);
        checkOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                checkOutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkOutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkOutMouseExited(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 9, 120));
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/Calendar.png"))); // NOI18N
        jLabel18.setText("       Check Out Date");

        datePickerOut.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        datePickerOut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        datePickerOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerOutActionPerformed(evt);
            }
        });
        datePickerOut.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                datePickerOutPropertyChange(evt);
            }
        });

        datePickerIn.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        datePickerIn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        datePickerIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datePickerInActionPerformed(evt);
            }
        });
        datePickerIn.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                datePickerInPropertyChange(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datePickerIn, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkIn, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(169, 169, 169)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(datePickerOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkOut, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)))
                .addGap(358, 358, 358))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datePickerIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datePickerOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkOut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkIn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
            .addComponent(jSeparator1)
        );

        lblTopic.setBackground(new java.awt.Color(255, 255, 255));
        lblTopic.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        lblTopic.setForeground(new java.awt.Color(152, 22, 1));
        lblTopic.setText("   Settle The Date");
        lblTopic.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblTopic.setOpaque(true);

        jLabel19.setBackground(new java.awt.Color(254, 254, 254));
        jLabel19.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 1, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/images.jpg"))); // NOI18N
        jLabel19.setText("     Search Rooms");
        jLabel19.setToolTipText("Search Rooms");
        jLabel19.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel19.setOpaque(true);
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel19MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel19MouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlCenter2Layout = new javax.swing.GroupLayout(pnlCenter2);
        pnlCenter2.setLayout(pnlCenter2Layout);
        pnlCenter2Layout.setHorizontalGroup(
            pnlCenter2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenter2Layout.createSequentialGroup()
                .addGroup(pnlCenter2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCenter2Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(pnlCenter2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 944, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlCenter2Layout.createSequentialGroup()
                        .addGap(434, 434, 434)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        pnlCenter2Layout.setVerticalGroup(
            pnlCenter2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCenter2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlCenter2, javax.swing.GroupLayout.PREFERRED_SIZE, 1097, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8162, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCenter2, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInMouseClicked
    }//GEN-LAST:event_checkInMouseClicked

    private void checkInMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInMouseExited
    }//GEN-LAST:event_checkInMouseExited

    private void checkInMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInMouseEntered
    }//GEN-LAST:event_checkInMouseEntered

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        if (checkIn.getText().equals("") | checkOut.getText().equals("")) {
            JOptionPane.showMessageDialog(null, " Not Complete ", "Error!", JOptionPane.WARNING_MESSAGE);
        } else {
            String in = checkIn.getText();

            String out = checkOut.getText();

            pnlCenter2.removeAll();
            pnlCenter2.setVisible(true);
            roomPanel a1 = null;
            try {
                a1 = new roomPanel(in, out);
            } catch (Exception ex) {
                Logger.getLogger(coverPanele.class.getName()).log(Level.SEVERE, null, ex);
            }
            a1.setSize(pnlCenter2.getSize());
            pnlCenter2.add(a1);
            pnlCenter2.repaint();
            pnlCenter2.revalidate();
        }

    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel19MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseExited
        jLabel19.setForeground(Color.blue);      // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseExited

    private void jLabel19MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseEntered
        jLabel19.setForeground(Color.black);
        jLabel19.setOpaque(true);       // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseEntered

    private void checkOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOutMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_checkOutMouseClicked

    private void checkOutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOutMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_checkOutMouseExited

    private void checkOutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOutMouseEntered
    }//GEN-LAST:event_checkOutMouseEntered

    private void datePickerOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerOutActionPerformed
        Date d = datePickerOut.getDate();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String formatDate = df.format(d);
        checkOut.setText(formatDate); // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_datePickerOutActionPerformed

    private void datePickerInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePickerInActionPerformed
        Date d = datePickerIn.getDate();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String formatDate = df.format(d);
        checkIn.setText(formatDate);
        // TODO add your handling code here:
    }//GEN-LAST:event_datePickerInActionPerformed

    private void datePickerInPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_datePickerInPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_datePickerInPropertyChange

    private void datePickerOutPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_datePickerOutPropertyChange
    // TODO add your handling code here:
    }//GEN-LAST:event_datePickerOutPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel checkIn;
    private javax.swing.JLabel checkOut;
    private org.jdesktop.swingx.JXDatePicker datePickerIn;
    private org.jdesktop.swingx.JXDatePicker datePickerOut;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblTopic;
    private javax.swing.JPanel pnlCenter2;
    // End of variables declaration//GEN-END:variables

    public void dateNow() {
        Date d = datePickerIn.getDate();
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String formatDate = df.format(d);
        checkIn.setText(formatDate);

        Date dd = datePickerOut.getDate();
        SimpleDateFormat ddf = new SimpleDateFormat("yyyy-MM-dd");
        String formatdDate = ddf.format(dd);
        checkOut.setText(formatdDate);

    }

    private void validationDate() {
        //datePickerIn.getMonthView().setUpperBound(new Date().getTime());
        /* JXDatePicker picker=new JXDatePicker();*/

    }

    private void disableCheckInDate() {

    }
}
