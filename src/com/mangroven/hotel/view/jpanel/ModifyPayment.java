/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mangroven.hotel.view.jpanel;

import com.mangroven.hotel.controller.ControllerFactory;
import com.mangroven.hotel.controller.custom.PaymentController;
import com.mangroven.hotel.dto.PaymentDTO;
import com.mangroven.hotel.idGenerator.IDGenerator;
import com.mangroven.hotel.jasper.main.JasperReportView;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 *
 * @author tharindu
 */
public class ModifyPayment extends javax.swing.JPanel {

    private String rsid, OldRid, rid, in, out, name, gid;
    private double price, old;
    private PaymentController payCntrl;

    /**
     * Creates new form ModifyPayment
     */
    public ModifyPayment() {
        initComponents();

    }

    public ModifyPayment(String id, double old, double price, String rid, String OldRid, String in, String out, String name, String gid) {
        initComponents();
        payCntrl = (PaymentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.PAYMENT);
        this.rsid = id;
        this.OldRid = OldRid;
        this.old = old;
        this.price = price;
        this.rid = rid;
        this.out = out;
        this.in = in;
        this.name = name;
        this.gid = gid;

        set();
        viewPayment();
        enabled();
        showTime();
        loadNewID();
        searchID();
    }

    /*   ModifyPayment(String id, String old, String price, String rid) {
     initComponents();
     payCntrl = (PaymentController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.PAYMENT);
     this.id = id;
     this.rid = rid;
     this.old = old;
     this.price = price;
     set();
     viewPayment();
     enabled();
     showTime();
     loadNewID();
     searchID();

     }*/
    private void showTime() {
        Timer tTimer = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                Calendar cal = new GregorianCalendar();
                Date d1 = new Date(); //java.util.Date ->get Current date and time
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                String formatDate = df.format(d1);
                //checkIN.setText(formatDate);
                // checkOut.setText(formatDate);
                txtDate.setText(formatDate);

                int AM_PM = cal.get(Calendar.AM_PM);

                String day_night = "";
                if (AM_PM == 1) {
                    day_night = "PM";
                } else {
                    day_night = "AM";
                }
                SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
                String formattedTime = sdf.format(d);
                Time.setText(formattedTime);
            }

        });
        tTimer.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jSeparator9 = new javax.swing.JSeparator();
        txtDate = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jSeparator10 = new javax.swing.JSeparator();
        Time = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jSeparator11 = new javax.swing.JSeparator();
        txtOld = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jSeparator12 = new javax.swing.JSeparator();
        txtRID = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jSeparator15 = new javax.swing.JSeparator();
        txtRsID = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        jSeparator13 = new javax.swing.JSeparator();
        txtNew = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtPyid = new javax.swing.JLabel();
        lblAdvance = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jSeparator16 = new javax.swing.JSeparator();
        txtAdvance = new javax.swing.JTextField();

        jPanel2.setBackground(new java.awt.Color(243, 243, 243));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(95, 16, 162));
        jLabel4.setText("Pre   Payment    ");

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(95, 16, 162));
        jLabel2.setText("Reservation  ID");

        jLabel10.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(95, 16, 162));
        jLabel10.setText("Room  ID");

        jPanel10.setBackground(new java.awt.Color(236, 236, 236));
        jPanel10.setOpaque(false);

        txtDate.setBackground(new java.awt.Color(236, 236, 236));
        txtDate.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtDate.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtDate.setOpaque(false);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 28, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9))
        );

        jScrollPane1.setBorder(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Pay ID", "Reservation ID", "Room ID", "Package ID", "Date", "Time", "Amount", "Advance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jLabel13.setBackground(new java.awt.Color(201, 165, 1));
        jLabel13.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Edit");
        jLabel13.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.setOpaque(true);
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel13MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel13MouseExited(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(236, 236, 236));
        jPanel11.setOpaque(false);

        Time.setBackground(new java.awt.Color(236, 236, 236));
        Time.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        Time.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Time.setOpaque(false);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator10, javax.swing.GroupLayout.DEFAULT_SIZE, 12, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(95, 16, 162));
        jLabel6.setText("Date       ");

        jPanel12.setBackground(new java.awt.Color(236, 236, 236));
        jPanel12.setOpaque(false);

        txtOld.setBackground(new java.awt.Color(236, 236, 236));
        txtOld.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtOld.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtOld.setOpaque(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOld, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtOld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(95, 16, 162));
        jLabel5.setText("Time      ");

        jLabel3.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(196, 18, 2));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/image1.gif"))); // NOI18N
        jLabel3.setText("   Payment");

        jPanel13.setBackground(new java.awt.Color(236, 236, 236));
        jPanel13.setOpaque(false);

        txtRID.setBackground(new java.awt.Color(236, 236, 236));
        txtRID.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtRID.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtRID.setOpaque(false);
        txtRID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator12)
                    .addComponent(txtRID, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtRID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel16.setBackground(new java.awt.Color(236, 236, 236));
        jPanel16.setOpaque(false);

        txtRsID.setBackground(new java.awt.Color(236, 236, 236));
        txtRsID.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtRsID.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtRsID.setOpaque(false);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtRsID, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                    .addComponent(jSeparator15))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtRsID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator15)
                .addContainerGap())
        );

        jPanel14.setBackground(new java.awt.Color(236, 236, 236));
        jPanel14.setOpaque(false);

        txtNew.setBackground(new java.awt.Color(236, 236, 236));
        txtNew.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtNew.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNew.setOpaque(false);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNew, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(95, 16, 162));
        jLabel11.setText("New  Amount    ");

        txtPyid.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtPyid.setForeground(new java.awt.Color(1, 42, 164));
        txtPyid.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblAdvance.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        lblAdvance.setForeground(new java.awt.Color(95, 16, 162));
        lblAdvance.setText("Advance / Payment");

        jPanel17.setBackground(new java.awt.Color(236, 236, 236));
        jPanel17.setOpaque(false);

        txtAdvance.setBackground(new java.awt.Color(9, 143, 2));
        txtAdvance.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtAdvance.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtAdvance.setOpaque(false);
        txtAdvance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAdvanceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAdvanceKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(txtAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(430, 430, 430)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPyid, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(594, 594, 594)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(347, 347, 347)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(txtPyid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(53, 53, 53)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAdvance, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        if (txtRsID.getText().equals("")) {
            JOptionPane.showMessageDialog(null, " Not complete", "Error!", JOptionPane.WARNING_MESSAGE);
        } else {
            update();
        }// TODO add your handling code here:
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseExited
        jLabel13.setForeground(Color.white);  // TODO add your handling code here:
    }//GEN-LAST:event_jLabel13MouseExited

    private void jLabel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseEntered
        jLabel13.setForeground(Color.BLACK);    // TODO add your handling code here:
    }//GEN-LAST:event_jLabel13MouseEntered

    private void txtRIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRIDActionPerformed

    private void txtAdvanceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdvanceKeyReleased

        double a = price;
        double b = old;
        double z = a - b;
        int key = evt.getKeyCode();

        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == evt.VK_BACK_SPACE || key == evt.VK_PERIOD || key == evt.VK_DELETE || key == evt.VK_HOME || key == evt.VK_END || key == evt.VK_LEFT || key == evt.VK_CAPS_LOCK) {
            double x = Double.parseDouble(txtAdvance.getText());
            // double y= Double.parseDouble(txtAmount.getText());
            if (x > z) {
                txtAdvance.setText("");
            }

        } else {
            txtAdvance.setText("");

        }
    }//GEN-LAST:event_txtAdvanceKeyReleased

    private void txtAdvanceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdvanceKeyTyped
        /* txtOld.setText(old + "");
         txtNew.setText(price + "");
        
        
        
         char c=evt.getKeyChar();
         if(!(Character.isDigit(c)||(c==KeyEvent.VK_BACK_SPACE)||c==KeyEvent.VK_DELETE)){
         getToolkit().beep();
         evt.consume();
         }*/
        /*if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == evt.VK_BACK_SPACE || key == evt.VK_PERIOD) {
         double x = Double.parseDouble(txtAdvance.getText());
         double y = Double.parseDouble(txtNew.getText());
         if (x > z) {
         txtAdvance.setText("");
         } else {
        
         }
         } else {
         txtAdvance.setText("");
         }*/        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdvanceKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Time;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator15;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAdvance;
    private javax.swing.JTextField txtAdvance;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtNew;
    private javax.swing.JTextField txtOld;
    private javax.swing.JLabel txtPyid;
    private javax.swing.JTextField txtRID;
    private javax.swing.JTextField txtRsID;
    // End of variables declaration//GEN-END:variables
private void set() {
        txtRsID.setText(rsid);
        txtRID.setText(rid);
        txtOld.setText(old + "");
        txtNew.setText(price + "");
        double a = price;
        double b = old;
        double z = a - b;
        txtAdvance.setText(z + "");
        if (z < 0) {
            lblAdvance.setText("Return Cash");
            lblAdvance.setForeground(Color.red);
            txtAdvance.setForeground(Color.red);
            txtAdvance.setEnabled(false);
        } else {
            lblAdvance.setForeground(new Color(9, 143, 2));
            txtAdvance.setForeground(new Color(9, 143, 2));
            txtAdvance.setEnabled(false);
        }
        //txtAdvance.selectAll();
    }

    private void enabled() {
        txtRsID.setEnabled(false);
        txtRsID.setDisabledTextColor(new Color(128, 128, 128));
        txtRID.setEnabled(false);
        txtRID.setDisabledTextColor(new Color(128, 128, 128));
        // txtOID.setEnabled(false);
        //txtOID.setDisabledTextColor(new Color(128, 128, 128));
        txtNew.setEnabled(false);
        txtNew.setDisabledTextColor(new Color(128, 128, 128));
        txtDate.setEnabled(false);
        txtDate.setDisabledTextColor(new Color(128, 128, 128));
        Time.setEnabled(false);
        Time.setDisabledTextColor(new Color(128, 128, 128));
        txtOld.setEnabled(false);
        txtOld.setDisabledTextColor(new Color(128, 128, 128));
    }

    private void viewPayment() {

        try {
            ArrayList<PaymentDTO> paymentList = payCntrl.getAllName();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            for (PaymentDTO c1 : paymentList) {
                Object[] rowData = {c1.getPyid(), c1.getRsid(), c1.getRid(), c1.getOid(), c1.getDate(), c1.getTime(), c1.getAmount(), c1.getAdvance()};
                dtm.addRow(rowData);
            }
        } catch (SQLException e) {
            System.out.println(e);
        } catch (ClassNotFoundException e) {
            System.out.println(e);

        } catch (Exception ex) {
            Logger.getLogger(ModifyPayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void update() {
        try {
            String OID = null;
            String RID = txtRID.getText();

            String pyid = txtPyid.getText();
            String RsID = txtRsID.getText();
            String Date = txtDate.getText();
            String time = Time.getText();
            double advance = Double.parseDouble(txtAdvance.getText());
            double ad = old + advance;
            double price = Double.parseDouble(txtNew.getText());
            double cost=0.0;
           
            PaymentDTO pay = new PaymentDTO(pyid, RsID, RID, OID, Date, time,cost, price, ad);
            boolean modify = payCntrl.update(pay);
            if (modify) {
                JOptionPane.showMessageDialog(null, "Payment Modify Successfull");
                viewPayment();
                reservationReport();
                modReserveCard();
                clear();

            } else {
                JOptionPane.showMessageDialog(null, "Payment Modify Failed");
            }
        } catch (Exception ex) {
            Logger.getLogger(ModifyPayment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadNewID() {

        try {
            String pyid;
            pyid = IDGenerator.getNewID("Payment", "PYID", "PY");
            txtPyid.setText(pyid);
        } catch (SQLException ex) {
            Logger.getLogger(ModifyPayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ModifyPayment.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ModifyPayment.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void searchID() {
        PaymentDTO payList = payCntrl.searchId(rsid, OldRid);
        System.out.println(rsid + " " + OldRid);
        System.out.println(payList.getPyid());
        System.out.println(payList.getRsid());
        txtPyid.setText(payList.getPyid());
        txtRsID.setText(payList.getRsid());
        // txtOld.setText(payList.setAmount()+"");
    }

    private void clear() {
        txtRsID.setText("");
        txtRID.setText("");
        txtOld.setText("");
        txtNew.setText("");
        txtAdvance.setText("");
        txtPyid.setText("");
        //txtOID.setText("");
    }

    private void reservationReport() {
        try {
            JasperReport mainReport = (JasperReport) JRLoader.loadObject(ModifyPayment.class.getResourceAsStream("/com/mangroven/hotel/jasper/reports/ModReservation_1.jasper"));
            HashMap<String, Object> parameters = new HashMap<>();

            double new1;
            double arrears;
            double x = Double.parseDouble(txtAdvance.getText());
            if (x <= 0) {
                new1 = 0;
                arrears = x;
            } else {
                new1 = x;
                arrears = 0;
            }

            parameters.put("payID", txtPyid.getText());
            parameters.put("gid", gid);
            parameters.put("gName", name);
            parameters.put("rsid", rsid);
            parameters.put("rid", rid);
            parameters.put("in", in);
            parameters.put("out", out);
            parameters.put("txtPay", txtNew.getText());
            parameters.put("previous", txtOld.getText());
            parameters.put("newPayment", new1 + "");
            parameters.put("arrears", arrears + "");
            parameters.put("lblArrears", txtAdvance.getText());

            JasperPrint filledReport = JasperFillManager.fillReport(mainReport, parameters, new JREmptyDataSource());
            JasperReportView view = new JasperReportView(filledReport);
            view.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(publicPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void modReserveCard() {
        try {
            JasperReport mainReport = (JasperReport) JRLoader.loadObject(ModifyPayment.class.getResourceAsStream("/com/mangroven/hotel/jasper/reports/modReserveBill.jasper"));
            HashMap<String, Object> parameters = new HashMap<>();
            parameters.put("gid", gid);
            parameters.put("gName", name);
            parameters.put("rsid", rsid);
            parameters.put("rid", rid);
            parameters.put("in", in);
            parameters.put("out", out);
            parameters.put("txtPay", txtNew.getText());
            parameters.put("previous", txtOld.getText());
            parameters.put("newPayment", txtNew.getText());
            parameters.put("arrears", txtAdvance.getText());
            parameters.put("lblArrears", txtAdvance.getText());

            JasperPrint filledReport = JasperFillManager.fillReport(mainReport, parameters, new JREmptyDataSource());
            JasperReportView view = new JasperReportView(filledReport);
            view.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(publicPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}

/* try {
 JasperReport mainReport = (JasperReport) JRLoader.loadObject(StartUp.class.getResourceAsStream("/com/mangroven/hotel/jasper/reports/ModReservation.jasper"));
 HashMap<String, Object> parameters = new HashMap<>();
 parameters.put("gid", gid);
 parameters.put("gName", name);
 parameters.put("rsid", rsid);
 parameters.put("rid", rid);
 parameters.put("in", in);
 parameters.put("out", out);
 parameters.put("txtPay", txtNew.getText());
 parameters.put("previous", txtOld.getText());
 parameters.put("newPayment",txtNew.getText());
 parameters.put("arrears", txtAdvance.getText());
 parameters.put("lblArrears", txtAdvance.getText());
        
 JasperPrint filledReport = JasperFillManager.fillReport(mainReport, parameters, new JREmptyDataSource());
 JasperReportView view = new JasperReportView(filledReport);
 view.setVisible(true);
 } catch (JRException ex) {
 Logger.getLogger(publicPanel.class.getName()).log(Level.SEVERE, null, ex);
 }
        
 }*/
