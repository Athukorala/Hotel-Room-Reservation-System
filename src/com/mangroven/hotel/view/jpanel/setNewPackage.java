/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mangroven.hotel.view.jpanel;

import com.mangroven.hotel.view.jframe.PackageFood;
import com.mangroven.hotel.controller.custom.impl.FoodControllerImpl;
import com.mangroven.hotel.controller.custom.impl.Food_PackageControllerImpl;
import com.mangroven.hotel.controller.custom.impl.Food_Package_DetailControllerImpl;
import com.mangroven.hotel.controller.ControllerFactory;
import com.mangroven.hotel.controller.custom.FoodController;
import com.mangroven.hotel.controller.custom.Food_PackageController;
import com.mangroven.hotel.controller.custom.Food_Package_DetailController;
import com.mangroven.hotel.dto.FoodDTO;
import com.mangroven.hotel.dto.Food_PackageDTO;
import com.mangroven.hotel.dto.Order_DetailDTO;
import com.mangroven.hotel.dto.Food_Package_DetailDTO;
import com.mangroven.hotel.dto.Reserve_Package_DetailDTO;
import java.awt.Color;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tharindu
 */
public class setNewPackage extends javax.swing.JPanel {
    private Food_Package_DetailController detailCntrl;
    private Food_PackageController packCntrl;
    private FoodController foodCntrl;
    
    
    /**
     * Creates new form setNewPackage
     */
    public setNewPackage() throws IOException, Exception {
        initComponents();
        detailCntrl=(Food_Package_DetailController)ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.FOOD_PACKAGE_DETAIL);
        packCntrl=(Food_PackageController)ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.FOOD_PACKAGE);
        foodCntrl=(FoodController)ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.FOOD);
        pid();
        fid();
        txtFoodName.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRemove = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        btnSet = new javax.swing.JLabel();
        comboPack = new javax.swing.JComboBox<String>();
        combeFood = new javax.swing.JComboBox<String>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblfood = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtFoodName = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        txtPackName = new javax.swing.JTextField();
        txtFoodPrice = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        txtPackPrice = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        btnView1 = new javax.swing.JLabel();
        btnView2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 254, 254));

        btnRemove.setBackground(new java.awt.Color(236, 236, 236));
        btnRemove.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(93, 16, 144));
        jLabel7.setText("Package ID        ");

        jLabel9.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(93, 16, 144));
        jLabel9.setText("Food ID        ");

        btnSet.setBackground(new java.awt.Color(10, 172, 1));
        btnSet.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        btnSet.setForeground(new java.awt.Color(255, 255, 255));
        btnSet.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSet.setText("Set");
        btnSet.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSet.setOpaque(true);
        btnSet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSetMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSetMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSetMouseEntered(evt);
            }
        });

        comboPack.setBackground(new java.awt.Color(236, 236, 236));
        comboPack.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        comboPack.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        comboPack.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPackItemStateChanged(evt);
            }
        });
        comboPack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPackActionPerformed(evt);
            }
        });

        combeFood.setBackground(new java.awt.Color(236, 236, 236));
        combeFood.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        combeFood.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        combeFood.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combeFoodItemStateChanged(evt);
            }
        });

        tblfood.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "  Food ID", "  Food Name"
            }
        ));
        tblfood.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblfood);

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(194, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/image1.gif"))); // NOI18N
        jLabel1.setText("  Build Up Package");

        jLabel10.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(93, 16, 144));
        jLabel10.setText("Package Name        ");

        jLabel11.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(93, 16, 144));
        jLabel11.setText("Unit Price");

        jLabel12.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(93, 16, 144));
        jLabel12.setText("Food Name");

        txtFoodName.setBackground(new java.awt.Color(236, 236, 236));
        txtFoodName.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtFoodName.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtFoodName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFoodNameActionPerformed(evt);
            }
        });

        txtPackName.setBackground(new java.awt.Color(236, 236, 236));
        txtPackName.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtPackName.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtPackName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPackNameActionPerformed(evt);
            }
        });

        txtFoodPrice.setBackground(new java.awt.Color(236, 236, 236));
        txtFoodPrice.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtFoodPrice.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtFoodPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFoodPriceActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(93, 16, 144));
        jLabel13.setText("Package Price        ");

        txtPackPrice.setBackground(new java.awt.Color(236, 236, 236));
        txtPackPrice.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        txtPackPrice.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btnView1.setBackground(new java.awt.Color(253, 7, 2));
        btnView1.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        btnView1.setForeground(new java.awt.Color(255, 255, 255));
        btnView1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnView1.setText("Remove");
        btnView1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnView1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnView1.setOpaque(true);
        btnView1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnView1MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnView1MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnView1MouseEntered(evt);
            }
        });

        btnView2.setBackground(new java.awt.Color(184, 141, 2));
        btnView2.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        btnView2.setForeground(new java.awt.Color(255, 255, 255));
        btnView2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnView2.setText("Update");
        btnView2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnView2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnView2.setOpaque(true);
        btnView2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnView2MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnView2MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnView2MouseEntered(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(254, 254, 254));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel/icon/Flying Stork_52px.png"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel2.setOpaque(true);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel2MouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel2MouseEntered(evt);
            }
        });

        javax.swing.GroupLayout btnRemoveLayout = new javax.swing.GroupLayout(btnRemove);
        btnRemove.setLayout(btnRemoveLayout);
        btnRemoveLayout.setHorizontalGroup(
            btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnRemoveLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 870, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSet, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnView2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(btnRemoveLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1059, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(btnRemoveLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(btnRemoveLayout.createSequentialGroup()
                                .addComponent(combeFood, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(223, 223, 223)
                                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(txtPackName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFoodName, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(btnRemoveLayout.createSequentialGroup()
                                        .addGap(199, 199, 199)
                                        .addComponent(txtFoodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(btnRemoveLayout.createSequentialGroup()
                                        .addGap(198, 198, 198)
                                        .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPackPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel13)
                                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnRemoveLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addGap(74, 74, 74))))
                            .addComponent(jLabel7)
                            .addComponent(comboPack, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(btnRemoveLayout.createSequentialGroup()
                .addGap(398, 398, 398)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(46, 46, 46))
        );
        btnRemoveLayout.setVerticalGroup(
            btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnRemoveLayout.createSequentialGroup()
                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(btnRemoveLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPackName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPackPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboPack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(btnRemoveLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnRemoveLayout.createSequentialGroup()
                                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFoodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(combeFood, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFoodPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(btnRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnRemoveLayout.createSequentialGroup()
                                .addComponent(btnSet, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnView1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnView2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))))
                    .addGroup(btnRemoveLayout.createSequentialGroup()
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 631, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 210, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSetMouseClicked
        if (tblfood.getRowCount() <= 0) {
            JOptionPane.showMessageDialog(null, "Please add item", "No item detected", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                set();

                // JOptionPane.showMessageDialog(null,"Saved Successfully","Saved",JOptionPane.INFORMATION_MESSAGE);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_btnSetMouseClicked

    private void btnSetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSetMouseExited
        btnSet.setForeground(Color.white);  // TODO add your handling code here:
    }//GEN-LAST:event_btnSetMouseExited

    private void btnSetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSetMouseEntered
        btnSet.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_btnSetMouseEntered

    private void txtFoodNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFoodNameActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tblfood.getModel();
        String code = (String) combeFood.getSelectedItem();
        String name = txtFoodName.getText();

        for (int i = 0; i < dtm.getRowCount(); i++) {
            String Code = (String) dtm.getValueAt(i, 0);
            if (Code.equals(code)) {
                dtm.removeRow(i);
                //JOptionPane.showMessageDialog(null,"Already has been Success");
            }
        }
        Object[] rowData = {code, name};
        dtm.addRow(rowData);
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFoodNameActionPerformed

    private void txtPackNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPackNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPackNameActionPerformed

    private void btnView1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnView1MouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblfood.getModel();
        if (tblfood.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Please Select an item to remove", "Remove an item?", JOptionPane.WARNING_MESSAGE);
        } else {
            dtm.removeRow(tblfood.getSelectedRow());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnView1MouseClicked

    private void btnView1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnView1MouseExited
        btnView1.setForeground(Color.white);     // TODO add your handling code here:
    }//GEN-LAST:event_btnView1MouseExited

    private void btnView1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnView1MouseEntered
        btnView1.setForeground(Color.black);        // TODO add your handling code here:
    }//GEN-LAST:event_btnView1MouseEntered

    private void txtFoodPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFoodPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFoodPriceActionPerformed

    private void comboPackItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPackItemStateChanged
     String pack = (String) comboPack.getSelectedItem();
        try {

            com.mangroven.hotel.dto.Food_PackageDTO cust = packCntrl.search(pack);
            txtPackName.setText(cust.getPackage_Name());
            txtPackPrice.setText(cust.getPackage_Price() + "");
        } catch (SQLException e) {
            System.out.println(e);
        } catch (ClassNotFoundException e) {
            System.out.println(e);
        } catch (IOException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPackItemStateChanged

    private void combeFoodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combeFoodItemStateChanged
        String food = (String) combeFood.getSelectedItem();

        try {

            FoodDTO cust = foodCntrl.search(food);
            txtFoodName.setText(cust.getFood_Name());
            txtFoodPrice.setText(cust.getUnit_Price() + "");
            txtFoodName.requestFocus();
        } catch (SQLException e) {
            System.out.println(e);
        } catch (ClassNotFoundException e) {
            System.out.println(e);
        } catch (IOException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*DefaultTableModel dtm=(DefaultTableModel)tblfood.getModel();
				String code=(String)combeFood.getSelectedItem();
				String name=txtFoodName.getText();
				
				for(int i=0;i<dtm.getRowCount();i++){
					String Code=(String)dtm.getValueAt(i,0);
					if(Code.equals(code)){
                                            dtm.removeRow(i);
                                                    //JOptionPane.showMessageDialog(null,"Already has been Success");
					}
				}
				Object[] rowData={code, name};
				dtm.addRow(rowData);
         */
// TODO add your handling code here:
    }//GEN-LAST:event_combeFoodItemStateChanged

    private void comboPackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboPackActionPerformed

    private void btnView2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnView2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnView2MouseClicked

    private void btnView2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnView2MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnView2MouseExited

    private void btnView2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnView2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_btnView2MouseEntered

    private void jLabel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseEntered
jLabel2.setForeground(Color.DARK_GRAY);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseEntered

    private void jLabel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseExited
jLabel2.setForeground(Color.white);         // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseExited

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
PackageFood p1=new PackageFood();
p1.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnRemove;
    private javax.swing.JLabel btnSet;
    private javax.swing.JLabel btnView1;
    private javax.swing.JLabel btnView2;
    private javax.swing.JComboBox<String> combeFood;
    private javax.swing.JComboBox<String> comboPack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable tblfood;
    private javax.swing.JTextField txtFoodName;
    private javax.swing.JTextField txtFoodPrice;
    private javax.swing.JTextField txtPackName;
    private javax.swing.JTextField txtPackPrice;
    // End of variables declaration//GEN-END:variables

    public void pid() throws IOException, Exception {
        try {

            ArrayList<com.mangroven.hotel.dto.Food_PackageDTO> packageList = packCntrl.getAllID();
            for (int i = 0; i < packageList.size(); i++) {
                com.mangroven.hotel.dto.Food_PackageDTO reserve = (com.mangroven.hotel.dto.Food_PackageDTO) packageList.get(i);
                comboPack.addItem(reserve.getPID());

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void fid() throws IOException, Exception {
        try {
            ArrayList<FoodDTO> foodList = foodCntrl.getAllID();
            for (int i = 0; i < foodList.size(); i++) {
                FoodDTO reserve = (FoodDTO) foodList.get(i);
                combeFood.addItem(reserve.getFID());

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void set() throws ClassNotFoundException, SQLException, IOException {

        String pack = (String) comboPack.getSelectedItem();
        String food = (String) combeFood.getSelectedItem();
        //String name=txtFoodName.getText();
        double price = Double.parseDouble(txtFoodPrice.getText());

        DefaultTableModel dtm = (DefaultTableModel) tblfood.getModel();
        ArrayList<Food_Package_DetailDTO> list = new ArrayList<>();
        for (int i = 0; i < dtm.getRowCount(); i++) {
            String fcode = (String) dtm.getValueAt(i, 0);
            Food_Package_DetailDTO o1 = new Food_Package_DetailDTO(pack, fcode);
            list.add(o1);
        }
          Food_PackageDTO o1 = new Food_PackageDTO(pack, food,price);
        boolean isAdded = false;
        try {
            isAdded = packCntrl.add(o1);
        } catch (Exception ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (isAdded) {
            JOptionPane.showMessageDialog(null, "Added Succes");
        } else {
            JOptionPane.showMessageDialog(null, "Failed");

        }
    }
}

/*   private void loadtAble(){
         DefaultTableModel dtm=(DefaultTableModel)tblfood.getModel();*/
 /*	Select Food_Name,f.FID From Food f,Package_Food_Detail p where (f.FID=p.FID) && p.PID="P002";*/
 /*
    String pack=(String)comboPack.getSelectedItem();
        try{
            DefaultTableModel dtm=(DefaultTableModel)tblfood.getModel();
            ArrayList<Food> flist=FoodController.getFoods(pack); 
           
            for (Food food : flist) {
            Object[] rowData={food.getFID(),food.getFood_Name()};
            dtm.addRow(rowData); 
            
 */
 /*
	public void viewjTable2(){
			         
                ArrayList<hotel.model.Package>packageList = null;
        try {
            packageList = PackageController.getAllPackages();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        }
				DefaultTableModel dtm=(DefaultTableModel)jTable2.getModel();
				dtm.setRowCount(0);
				for(hotel.model.Package c1 : packageList){
					Object[] rowData={c1.getPID(),c1.getPackage_Name(),c1.getPackage_Price()};
					dtm.addRow(rowData);
	
					
                                }	
                            }
        
        
        public void viewtable(){
            ArrayList<Food>foodList = null;
        try {
            foodList = FoodController.getAllFoods();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(setNewPackage.class.getName()).log(Level.SEVERE, null, ex);
        }
					DefaultTableModel dtm=(DefaultTableModel)table.getModel();
					dtm.setRowCount(0);
					for(Food c1 : foodList){
						Object[] rowData={c1.getFID(),c1.getFood_Name()};
                                                
						dtm.addRow(rowData);
        }
}
}
 */
